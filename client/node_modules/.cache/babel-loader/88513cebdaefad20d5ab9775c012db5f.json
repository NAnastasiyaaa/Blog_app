{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Legion\\\\Desktop\\\\blog_learning\\\\client\\\\src\\\\singlePost\\\\SinglePost.jsx\",\n    _s = $RefreshSig$();\n\nimport \"./singlePost.css\";\nimport axios from \"axios\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { Context } from \"../context/Context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SinglePost() {\n  _s();\n\n  const location = useLocation();\n  const path = location.pathname.split(\"/\")[2];\n  const [post, setPost] = useState({});\n  const PF = \"http://localhost:5000/images/\";\n  const {\n    user\n  } = useContext(Context);\n  const [title, setTitle] = useState(\"\");\n  const [desc, setDesc] = useState(\"\");\n  const [updateMode, setUpdateMode] = useState(false);\n  useEffect(() => {\n    const getPost = async () => {\n      const res = await axios.get(\"/posts/\" + path);\n      setPost(res.data);\n      setTitle(res.data.title);\n      setDesc(res.data.desc);\n    };\n\n    getPost();\n  }, [path]);\n\n  const handleUpdate = async () => {};\n\n  const handleDelete = async () => {\n    try {\n      await axios.delete(`/posts/${post._id}`, {\n        data: {\n          username: user.username\n        }\n      });\n      window.location.replace(\"/\");\n    } catch (err) {}\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"singlePost\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"singlePostWrapper\",\n      children: [post.photo && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: PF + post.photo,\n        alt: \"\",\n        className: \"singlePostImg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this), updateMode ? /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: title,\n        className: \"singlePostTitleInput\",\n        autoFocus: true,\n        onChange: e => setTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"singlePostTitle\",\n        children: [post.title, post.username === (user === null || user === void 0 ? void 0 : user.username) && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"singlePostEdit\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"postIcon fa fa-edit\",\n            onClick: () => setUpdateMode(true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n            class: \"postIcon fa fa-trash\",\n            onClick: handleDelete\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"singlePostInfo\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"singlePostAuthor\",\n          children: [\"Author:\", /*#__PURE__*/_jsxDEV(Link, {\n            to: `/?user=${post.username}`,\n            className: \"link\",\n            children: /*#__PURE__*/_jsxDEV(\"b\", {\n              children: post.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"singlePostDate\",\n          children: new Date(post.createdAt).toDateString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), updateMode ? /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"singlePostDescInput\",\n        value: desc,\n        onChange: e => setDesc(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"singlePostDesc\",\n        children: post.desc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"singlePostButton\",\n        onClick: handleUpdate,\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SinglePost, \"xs7JL4oKuIn8mxMMLFGIhzF2qFM=\", false, function () {\n  return [useLocation];\n});\n\n_c = SinglePost;\nexport default SinglePost;\n\nvar _c;\n\n$RefreshReg$(_c, \"SinglePost\");","map":{"version":3,"sources":["C:/Users/Legion/Desktop/blog_learning/client/src/singlePost/SinglePost.jsx"],"names":["axios","useContext","useEffect","useState","Link","useLocation","Context","SinglePost","location","path","pathname","split","post","setPost","PF","user","title","setTitle","desc","setDesc","updateMode","setUpdateMode","getPost","res","get","data","handleUpdate","handleDelete","delete","_id","username","window","replace","err","photo","e","target","value","Date","createdAt","toDateString"],"mappings":"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","sourcesContent":["import \"./singlePost.css\";\r\nimport axios from \"axios\";\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport { Context } from \"../context/Context\";\r\n\r\nfunction SinglePost() {\r\n  const location = useLocation();\r\n  const path = location.pathname.split(\"/\")[2];\r\n  const [post, setPost] = useState({});\r\n  const PF = \"http://localhost:5000/images/\";\r\n  const { user } = useContext(Context);\r\n  const [title, setTitle] = useState(\"\");\r\n  const [desc, setDesc] = useState(\"\");\r\n  const [updateMode, setUpdateMode] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const getPost = async () => {\r\n      const res = await axios.get(\"/posts/\" + path);\r\n      setPost(res.data);\r\n      setTitle(res.data.title);\r\n      setDesc(res.data.desc);\r\n    };\r\n    getPost();\r\n  }, [path]);\r\n\r\n  const handleUpdate = async ()=>{\r\n     \r\n  }\r\n\r\n  const handleDelete = async () => {\r\n    try {\r\n      await axios.delete(`/posts/${post._id}`, {\r\n        data: { username: user.username },\r\n      });\r\n      window.location.replace(\"/\");\r\n    } catch (err) {}\r\n  };\r\n\r\n  return (\r\n    <div className=\"singlePost\">\r\n      <div className=\"singlePostWrapper\">\r\n        {post.photo && (\r\n          <img src={PF + post.photo} alt=\"\" className=\"singlePostImg\" />\r\n        )}\r\n        {updateMode ? (\r\n          <input\r\n            type=\"text\"\r\n            value={title}\r\n            className=\"singlePostTitleInput\"\r\n            autoFocus\r\n            onChange={(e) => setTitle(e.target.value)}\r\n          />\r\n        ) : (\r\n          <h1 className=\"singlePostTitle\">\r\n            {post.title}\r\n            {post.username === user?.username && (\r\n              <div className=\"singlePostEdit\">\r\n                <i\r\n                  className=\"postIcon fa fa-edit\"\r\n                  onClick={() => setUpdateMode(true)}\r\n                ></i>\r\n                <i class=\"postIcon fa fa-trash\" onClick={handleDelete}></i>\r\n              </div>\r\n            )}\r\n          </h1>\r\n        )}\r\n        <div className=\"singlePostInfo\">\r\n          <span className=\"singlePostAuthor\">\r\n            Author:\r\n            <Link to={`/?user=${post.username}`} className=\"link\">\r\n              <b>{post.username}</b>\r\n            </Link>\r\n          </span>\r\n          <span className=\"singlePostDate\">\r\n            {new Date(post.createdAt).toDateString()}\r\n          </span>\r\n        </div>\r\n        {updateMode ? (\r\n          <textarea\r\n            className=\"singlePostDescInput\"\r\n            value={desc}\r\n            onChange={(e) => setDesc(e.target.value)}\r\n          />\r\n        ) : (\r\n          <p className=\"singlePostDesc\">{post.desc}</p>\r\n        )}\r\n        <button className=\"singlePostButton\"onClick={handleUpdate}>Update</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SinglePost;\r\n"]},"metadata":{},"sourceType":"module"}